
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: fios.perf.kubestone.xridge.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.running
    name: Running
    type: boolean
  - JSONPath: .status.completed
    name: Completed
    type: boolean
  group: perf.kubestone.xridge.io
  names:
    kind: Fio
    plural: fios
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Fio is the Schema for the fios API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: FioSpec defines the desired state of Fio
          properties:
            builtinJobFiles:
              description: BuiltinJobFiles contains a list of fio job files that are
                already present in the docker image
              items:
                type: string
              type: array
            cmdLineArgs:
              description: CmdLineArgs are appended to the predefined fio parameters
              type: string
            customJobFiles:
              description: 'CustomJobFiles contains a list of custom fio job files
                The exact format of fio job files is documented here: https://fio.readthedocs.io/en/latest/fio_doc.html#job-file-format
                The job files defined here will be mounted to the fio benchmark container'
              items:
                type: string
              type: array
            image:
              description: Image defines the fio docker image used for the benchmark
              properties:
                name:
                  description: Name is the Docker Image location including the tag
                  type: string
                pullPolicy:
                  description: PullPolicy controls how the docker images are downloaded
                    Defaults to Always if :latest tag is specified, or IfNotPresent
                    otherwise.
                  enum:
                  - Always
                  - Never
                  - IfNotPresent
                  type: string
                pullSecret:
                  description: PullSecret is an optional list of references to secrets
                    in the same namespace to use for pulling any of the images
                  type: string
              required:
              - name
              type: object
            persistentVolumeClaim:
              description: PersistentVolumeClaim describes the persistent volume claim
                that will be created and used by the pod. This field is ignored if
                PersistentVolumeClaimName is given, in that case the pod will use
                the PVC by that given name.
              properties:
                accessModes:
                  description: 'AccessModes contains the desired access modes the
                    volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                  items:
                    description: PersistentVolumeAccessMode defines the way the pv
                      is mounted
                    enum:
                    - ReadWriteOnce
                    - ReadOnlyMany
                    - ReadWriteMany
                    type: string
                  type: array
                selector:
                  description: Selector is a label query over volumes to consider
                    for binding.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                size:
                  description: Size defines the size of the PVC
                  pattern: ^\d+(\.\d+)?([KMGTP]i?)?$
                  type: string
                storageClassName:
                  description: 'StorageClassName is the name of the StorageClass required
                    by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                  type: string
                volumeMode:
                  description: VolumeMode defines what type of volume is required
                    by the claim. Value of Filesystem is implied when not included
                    in claim spec. This is a beta feature.
                  enum:
                  - Block
                  - Filesystem
                  type: string
                volumeName:
                  description: VolumeName is the binding reference to the PersistentVolume
                    backing this claim.
                  type: string
              required:
              - size
              type: object
            persistentVolumeClaimName:
              description: PersistentVolumeClaimName is the name of the existing persistence
                volume claim that will be used by the benchmark pod. If undefined,
                you can either use PersistentVolumeClaim to create and use a PVC,
                or nothing to run the benchmark inside the pod.
              type: string
          required:
          - image
          type: object
        status:
          description: FioStatus describes the current state of the benchmark
          properties:
            completed:
              description: Completed shows the state of completion
              type: boolean
            running:
              description: Running shows the state of execution
              type: boolean
          required:
          - completed
          - running
          type: object
      type: object
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
